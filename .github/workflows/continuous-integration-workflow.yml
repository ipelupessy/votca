name: CI
on:
  push:
    branches:
      - master
      - stable
  pull_request:
    branches:
      - master
      - stable
  schedule:
    - cron:  '0 5 * * FRI'

concurrency:
  group: ${ {github.event_name }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{github.event_name == 'pull_request'}}

jobs:
  CI:
    # Ubuntu devel, Fedora Rawhide and some other in the matrix are allowed to fail, so continue with other builds
    continue-on-error: ${{ matrix.distro == 'ubuntu:devel' || matrix.distro == 'opensuse:latest' || matrix.distro == 'fedora:rawhide' || matrix.continue-on-error == true }}
    strategy:
      matrix:
        distro: ['fedora:latest', 'fedora:rawhide', 'opensuse:latest', 'ubuntu:latest', 'ubuntu:devel', 'ubuntu:rolling', 'fedora:intel']
        toolchain: [gnu, clang]
        cmake_build_type: [Release, Debug]
        minimal: [false]
        own_gmx: [false]
        module_build: [false]
        coverage: [false]
        deploy: [false]
        include:
          - distro: 'fedora:latest'
            toolchain: gnu
            cmake_build_type: Release
            minimal: false
            own_gmx: false
            module_build: false
            coverage: false
            # make sure there is only one build deploying
            deploy: true
          - distro: 'fedora:nogmx'
            toolchain: gnu
            cmake_build_type: Release
            minimal: true
          - distro: 'fedora:nogmx'
            toolchain: clang
            cmake_build_type: Release
            minimal: true
          - distro: 'fedora:nogmx'
            toolchain: gnu
            cmake_build_type: Release
            own_gmx: true
          - distro: 'fedora:latest'
            toolchain: gnu
            cmake_build_type: Release
            minimal: false
            own_gmx: false
            module_build: true
            coverage: false
            deploy: false
          - distro: 'fedora:intel'
            toolchain: intel
            cmake_build_type: Release
          - distro: 'fedora:intel'
            toolchain: intel
            cmake_build_type: Debug
          - distro: 'fedora:intel'
            toolchain: intel-oneapi
            cmake_build_type: Release
          - distro: 'fedora:intel'
            toolchain: intel-oneapi
            cmake_build_type: Debug
          - distro: 'fedora:gmx2019'
            toolchain: gnu
            cmake_build_type: Release
          - distro: 'fedora:gmx2019'
            toolchain: clang
            cmake_build_type: Release
          - distro: 'fedora:gmx2019_d'
            toolchain: gnu
            cmake_build_type: Release
          - distro: 'fedora:gmx2019_d'
            toolchain: clang
            cmake_build_type: Release
          - distro: 'fedora:gmx2021'
            toolchain: gnu
            cmake_build_type: Release
          - distro: 'fedora:gmx2021'
            toolchain: clang
            cmake_build_type: Release
          - distro: 'fedora:gmx2021_d'
            toolchain: gnu
            cmake_build_type: Release
          - distro: 'fedora:gmx2021_d'
            toolchain: clang
            cmake_build_type: Release
          - distro: 'fedora:gmx9999'
            toolchain: gnu
            cmake_build_type: Release
            continue-on-error: true
          - distro: 'fedora:gmx9999'
            toolchain: clang
            cmake_build_type: Release
            continue-on-error: true
          - distro: 'fedora:gmx9999_d'
            toolchain: gnu
            cmake_build_type: Release
            continue-on-error: true
          - distro: 'fedora:gmx9999_d'
            toolchain: clang
            cmake_build_type: Release
            continue-on-error: true
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/votca/buildenv/${{ matrix.distro }}
      # https://bugzilla.redhat.com/show_bug.cgi?id=1900021
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: export
        run: export
      - name: test numpy
        run: ./csg/share/scripts/inverse/iie.py
